<?xml version="1.0" encoding="UTF-8"?>
<!-- Schema 추가 -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="com.camp.s1.camping.CampDAO">
  
    <!-- 공통부분 - 검색 -->
  	<sql id="searchCondition">
  		<where>
  			<!-- CAMPNUM = #{campNum} AND / site 옵션 쓸 때 써야함-->
	  		<if test="kind=='name'">
	  			NAME LIKE '%' || #{search} || '%'
	  		</if>
			<if test="kind=='phone'">
	  			PHONE LIKE '%' || #{search} || '%'
	  		</if>
	  		<if test="kind=='address'">
	  			ADDRESS LIKE '%' || #{search} || '%'
	  		</if>
	  		<if test="kind=='contents'">
	  			CONTENTS LIKE '%' || #{search} || '%'
	  		</if>
  		</where>
  	</sql>
  	
  	
  	<!-- totalCount - calculate row of Pager -->
  	<select id="getTotalCount" parameterType="Pager" resultType="Long">
  		SELECT COUNT(CAMPNUM) FROM CAMPINFO
  		<include refid="searchCondition"></include>
  	</select>
  
  
  	<!-- list -->
  	<!-- <select id="getCampList" parameterType="Pager" resultType="CampDTO"> -->
 	<select id="getCampList" parameterType="Pager" resultMap="getCampFileList">
  		<!-- SELECT * FROM CAMPINFO ORDER BY CAMPNUM DESC -->
  		<!-- SELECT * FROM
			(SELECT ROWNUM R, C.* FROM
				(SELECT * FROM CAMPINFO
				<include refid="searchCondition"></include>
			ORDER BY CAMPNUM ASC) C)
		WHERE R BETWEEN #{startRow} AND #{lastRow} -->
		SELECT * FROM
			(SELECT ROWNUM R, C.* FROM
				(SELECT * FROM CAMPINFO CI
				LEFT OUTER JOIN
				CAMPFILES CF
				USING(CAMPNUM)
				<include refid="searchCondition"></include>
			ORDER BY CAMPNUM ASC) C)
		WHERE R BETWEEN #{startRow} AND #{lastRow}  		
  	</select>
  	<!-- List-file -->
  	<resultMap type="CampDTO" id="getCampFileList">
  		<id column="CAMPNUM" property="campNum"/>
  		<result column="NAME" property="name"/>
  		<result column="PHONE" property="phone"/>
  		<result column="ADDRESS" property="address"/>
  		<result column="CONTENTS" property="contents"/>
  		
  		<collection property="campFileDTOs" javaType="List" ofType="CampFileDTO">
  			<id column="FILENUM" property="fileNum"/>
  			<result column="FILENAME" property="fileName"/>
  			<result column="ORINAME" property="oriName"/>
  		</collection>
  	</resultMap>
  	
  	
  	<!-- detail-file -->
  	<select id="getCampDetail" parameterType="CampDTO" resultMap="getCampFileDetail">
  		<!-- SELECT * FROM CAMPINFO WHERE CAMPNUM=#{campNum} -->
  		SELECT * FROM CAMPINFO CI
			LEFT OUTER JOIN
			CAMPFILES CF
			ON(CI.CAMPNUM=CF.CAMPNUM)
		WHERE CI.CAMPNUM=#{campNum}
  	</select>
  	<!-- detail-file 연결 --> <!-- 이부분은 CampDTO 수정되면 수정되어야할 부분 -->
  	<resultMap type="CampDTO" id="getCampFileDetail">
  		<id column="CAMPNUM" property="campNum"/>
  		<result column="NAME" property="name"/>
  		<result column="PHONE" property="phone"/>
  		<result column="ADDRESS" property="address"/>
  		<result column="CONTENTS" property="contents"/>
  		
  		<collection property="campFileDTOs" javaType="List" ofType="CampFileDTO">
  			<id column="FILENUM" property="fileNum"/>
  			<result column="FILENAME" property="fileName"/>
  			<result column="ORINAME" property="oriName"/>
  		</collection>
  	</resultMap>
  	
  	
  	<!-- detail-site(option) -->
  	<select id="getCampSiteList" parameterType="CampDTO" resultMap="getCampSiteDetail">
  		SELECT * FROM CAMPINFO CI
			LEFT OUTER JOIN
			CAMPSITE CS 
			USING(CAMPNUM)
		WHERE CAMPNUM=#{campNum}
  	</select>
  	<resultMap type="CampSiteDTO" id="getCampSiteDetail">
  		<id column="CAMPNUM" property="campNum"/>
  		<result column="NAME" property="name"/>
  		<result column="PHONE" property="phone"/>
  		<result column="ADDRESS" property="address"/>
  		<result column="CONTENTS" property="contents"/>
  		
  		<collection property="campSiteDTOs" javaType="List" ofType="CampSiteDTO">
  			<id column="AREANUM" property="areaNum"/>
  			<result column="SIZEINFO" property="sizeInfo"/>
  			<result column="PRICE" property="price"/>
  			<result column="STATUS" property="status"/>
  			<result column="SITENAME" property="siteName"/>
  		</collection>
  	</resultMap>
  
  
	<!-- add -->
	<insert id="setCampAdd" parameterType="CampDTO">
		<selectKey keyProperty="campNum" order="BEFORE" resultType="Long">
			SELECT CAMPSEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO CAMPINFO(CAMPNUM, NAME, PHONE, ADDRESS, CONTENTS)
		VALUES(#{campNum}, #{name}, #{phone}, #{address}, #{contents})
	</insert>
	
	<!-- delete -->
	<delete id="setCampDelete" parameterType="CampDTO">
		DELETE CAMPINFO WHERE CAMPNUM=#{campNum}
	</delete>
	
	<!-- update -->
	<update id="setCampUpdate" parameterType="CampDTO">
		UPDATE CAMPINFO SET NAME=#{name}, PHONE=#{phone}, ADDRESS=#{address}, CONTENTS=#{contents}
		WHERE CAMPNUM=#{campNum}
	</update>
	
	
	<!-- file -->
	<!-- fileList -->
	<select id="getCampFileList" parameterType="CampDTO" resultType="CampFileDTO">
		SELECT * FROM CAMPFILES WHERE CAMPNUM=#{campNum}
	</select>
	
  
	<!-- fileAdd -->
	<insert id="setCampFileAdd" parameterType="CampFileDTO">
		INSERT INTO CAMPFILES (FILENUM, CAMPNUM, FILENAME, ORINAME)
		VALUES(CAMPSEQ.NEXTVAL, #{campNum}, #{fileName}, #{oriName})
	</insert>
	
	<!-- fileDetail -->
	<select id="getCampFileDetail" parameterType="CampFileDTO" resultType="CampFileDTO">
		SELECT * FROM CAMPFILES WHERE FILENUM=#{fileNum}
	</select>
	
	<!-- fileDelete/CASCADE에서는 필요없을듯 -->
	<delete id="setCampFileDelete" parameterType="Long">
		DELETE CAMPFILES WHERE FILENUM=#{fileNum}
	</delete>
  
  </mapper>